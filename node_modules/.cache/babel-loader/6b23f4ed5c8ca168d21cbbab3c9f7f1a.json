{"ast":null,"code":"var _jsxFileName = \"/Users/riyanegi/Desktop/static-website/src/WebsitePages/OptionsPage.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/Provider\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptionsPage = () => {\n  _s();\n\n  const globalStore = useContext(GlobalContext);\n  let {\n    optionId: string\n  } = useParams();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [console.log(\"Checl\", globalStore, optionId), globalStore.webData[globalStore.dataIndex].excuses[optionId].explanations[0]]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_s(OptionsPage, \"k87AxzLpNjncsy/nGVrmTRnVA/M=\", false, function () {\n  return [useParams];\n});\n\n_c = OptionsPage;\nexport default OptionsPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionsPage\");","map":{"version":3,"sources":["/Users/riyanegi/Desktop/static-website/src/WebsitePages/OptionsPage.tsx"],"names":["React","useContext","GlobalContext","useParams","OptionsPage","globalStore","optionId","string","console","log","webData","dataIndex","excuses","explanations"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAA4C,OAA5C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAMC,WAAgB,GAAGJ,UAAU,CAACC,aAAD,CAAnC;AACA,MAAI;AAAEI,IAAAA,QAAQ,EAAEC;AAAZ,MAAuBJ,SAAS,EAApC;AAEA,sBACE;AAAA,eACGK,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBJ,WAArB,EAAkCC,QAAlC,CADH,EAGID,WAAW,CAACK,OAAZ,CAAoBL,WAAW,CAACM,SAAhC,EAA2CC,OAA3C,CAAmDN,QAAnD,EACGO,YADH,CACgB,CADhB,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CAbD;;GAAMT,W;UAEuBD,S;;;KAFvBC,W;AAeN,eAAeA,WAAf","sourcesContent":["import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/Provider\";\nimport { useParams } from \"react-router-dom\";\n\nconst OptionsPage = () => {\n  const globalStore: any = useContext(GlobalContext);\n  let { optionId: string } = useParams();\n\n  return (\n    <div>\n      {console.log(\"Checl\", globalStore, optionId)}\n      {\n        globalStore.webData[globalStore.dataIndex].excuses[optionId]\n          .explanations[0]\n      }\n    </div>\n  );\n};\n\nexport default OptionsPage;\n"]},"metadata":{},"sourceType":"module"}
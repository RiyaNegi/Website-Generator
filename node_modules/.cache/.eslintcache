[{"/Users/riyanegi/Desktop/static-website/src/index.tsx":"1","/Users/riyanegi/Desktop/static-website/src/routes/index.js":"2","/Users/riyanegi/Desktop/static-website/src/App.tsx":"3","/Users/riyanegi/Desktop/static-website/src/WebsitePages/HomePage.tsx":"4","/Users/riyanegi/Desktop/static-website/src/WebsiteGenerator/index.tsx":"5","/Users/riyanegi/Desktop/static-website/src/context/Provider.js":"6","/Users/riyanegi/Desktop/static-website/src/context/InitialState.js":"7","/Users/riyanegi/Desktop/static-website/src/WebsitePages/ SubPage.tsx":"8","/Users/riyanegi/Desktop/static-website/src/WebsitePages/OptionsPage.tsx":"9"},{"size":351,"mtime":1646580206679,"results":"10","hashOfConfig":"11"},{"size":573,"mtime":1650553913705,"results":"12","hashOfConfig":"11"},{"size":379,"mtime":1646634534821,"results":"13","hashOfConfig":"11"},{"size":927,"mtime":1650007069255,"results":"14","hashOfConfig":"11"},{"size":560,"mtime":1650009679621,"results":"15","hashOfConfig":"11"},{"size":1815,"mtime":1650618714128,"results":"16","hashOfConfig":"11"},{"size":91,"mtime":1646127479077,"results":"17","hashOfConfig":"11"},{"size":4111,"mtime":1650572608922,"results":"18","hashOfConfig":"11"},{"size":2074,"mtime":1650619865829,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"dif8tj",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"/Users/riyanegi/Desktop/static-website/src/index.tsx",[],[],["54","55"],"/Users/riyanegi/Desktop/static-website/src/routes/index.js",["56"],[],"import App from \"../App\";\nimport HomePage from \"../WebsitePages/HomePage\";\nimport WebsiteGenerator from \"../WebsiteGenerator\";\nimport OptionsPage from \"../WebsitePages/OptionsPage\";\n\nimport { Routes, Route } from \"react-router-dom\";\n\nconst RouteIndex = () => {\n  return (\n    <Routes>\n      <Route exact path=\"/\" element={<App />} />\n      <Route path=\"/goVegan/pages/:pageId\" element={<WebsiteGenerator />} />\n      <Route\n        path=\"/goVegan/pages/:pageId/options/:optionId\"\n        element={<OptionsPage />}\n      />\n    </Routes>\n  );\n};\n\nexport default RouteIndex;\n",["57","58"],"/Users/riyanegi/Desktop/static-website/src/App.tsx",[],[],"/Users/riyanegi/Desktop/static-website/src/WebsitePages/HomePage.tsx",[],[],["59","60"],"/Users/riyanegi/Desktop/static-website/src/WebsiteGenerator/index.tsx",["61","62","63","64"],[],"import React, { useContext } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport HomePage from \"../WebsitePages/HomePage\";\nimport { GlobalContext } from \"../context/Provider\";\nimport SubPage from \"../WebsitePages/ SubPage\";\nimport _ from \"lodash\";\n\ninterface WebsiteGeneratorProps {}\n\nconst WebsiteGenerator = ({}: WebsiteGeneratorProps) => {\n  const globalStore: any = useContext(GlobalContext);\n  const { pageId } = useParams();\n\n  return <SubPage content={globalStore.webData[globalStore.dataIndex!]} />;\n};\n\nexport default WebsiteGenerator;\n","/Users/riyanegi/Desktop/static-website/src/context/Provider.js",["65","66","67","68"],[],"/Users/riyanegi/Desktop/static-website/src/context/InitialState.js",[],[],"/Users/riyanegi/Desktop/static-website/src/WebsitePages/ SubPage.tsx",["69","70","71"],[],"import React, { useContext, useState } from \"react\";\nimport \"./SubPage.css\";\nimport \"../App.css\";\nimport { GlobalContext } from \"../context/Provider\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\n\ninterface SubPageProps {\n  content: { payload: { texts: Array<String> | undefined } } | undefined;\n}\n\nconst SubPage = ({ content }: SubPageProps) => {\n  const [check, setCheck] = useState([]);\n  const globalStore: any = useContext(GlobalContext);\n\n  const textGenerator = (textArray: Array<String>) => {\n    return textArray.map((i) => <span className=\"text-spn\"> {i} </span>);\n  };\n\n  const multiSelectGenerator = (\n    excusesObject: Array<{\n      excuseId: number;\n      text: string;\n      explanations: Array<{}>;\n    }>\n  ) => {\n    return (\n      <div className=\"options-checkboxes\">\n        {excusesObject.map((i) => (\n          <label className=\"options-align\">\n            <input\n              key={i.excuseId}\n              type=\"checkbox\"\n              value={i.excuseId}\n              onChange={() => globalStore.addRemoveOptions(i.excuseId)}\n              defaultChecked={\n                !globalStore.optionsSelected.filter(\n                  (i: any) => i === i.excuseId\n                )\n              }\n            />\n            {\"\"}\n            {i.text}\n          </label>\n        ))}\n      </div>\n    );\n  };\n\n  const optionsButtonGenerator = (\n    btnObject:\n      | {\n          style: { buttonLayout: string } | undefined;\n          text: string;\n        }\n      | undefined\n  ) => {\n    return (\n      <div className=\"btn-space\">\n        <Link\n          to={{\n            pathname: `/goVegan/pages/${globalStore.contentId}/options/${globalStore.optionsSelected[0]}`,\n          }}\n        >\n          <button key={btnObject?.text} className=\"btn-style btn-space\">\n            <span>{btnObject?.text}</span>\n          </button>\n        </Link>\n      </div>\n    );\n  };\n\n  const buttonGenerator = (\n    btnObject:\n      | {\n          style: { buttonLayout: string } | undefined;\n          list: Array<{\n            text: string;\n            nextPageId: number;\n            variable: string;\n            value: string;\n          }>;\n        }\n      | undefined\n  ) => {\n    if (btnObject?.style?.buttonLayout === \" vertical\") {\n      return (\n        <div className=\"vertical-btn btn-space\">\n          {btnObject.list.map((i: { text: string; nextPageId: number }) => (\n            <Link to={{ pathname: `/goVegan/pages/${i.nextPageId}` }}>\n              <button\n                key={i.text}\n                className=\"btn-style btn-space\"\n                onClick={() => globalStore.setContentId(i.nextPageId)}\n              >\n                <span>{i.text}</span>\n              </button>\n            </Link>\n          ))}\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"horizontal-btn\">\n          {btnObject?.list.map((i: { text: string; nextPageId: number }) => (\n            <Link to={{ pathname: `/goVegan/pages/${i.nextPageId}` }}>\n              <button\n                key={i.text}\n                className=\"btn-style btn-space\"\n                onClick={() => globalStore.setContentId(i.nextPageId)}\n              >\n                <span>{i.text}</span>\n              </button>\n            </Link>\n          ))}\n        </div>\n      );\n    }\n  };\n\n  return (\n    <div className=\"sub-page\">\n      {textGenerator(content?.payload.texts!)}\n      {console.log(\"checl\", globalStore.optionsSelected, globalStore.dataType)}\n\n      {globalStore.dataType === \"SINGLE_QUESTION\"\n        ? buttonGenerator(\n            globalStore.webData[globalStore.dataIndex].payload.buttons\n          )\n        : globalStore.dataType === \"EXCUSE_SELECT\" && (\n            <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n              {multiSelectGenerator(\n                globalStore.webData[globalStore.dataIndex].payload.excuses\n              )}\n              {optionsButtonGenerator(\n                globalStore.webData[globalStore.dataIndex].payload.button\n              )}\n            </div>\n          )}\n    </div>\n  );\n};\n\nexport default SubPage;\n","/Users/riyanegi/Desktop/static-website/src/WebsitePages/OptionsPage.tsx",["72","73"],[],"import React, { useContext, useState } from \"react\";\nimport { GlobalContext } from \"../context/Provider\";\nimport { useParams } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport \"./OptionsPage.css\";\n\nconst OptionsPage = () => {\n  const globalStore: any = useContext(GlobalContext);\n  const [iterator, setIterator] = useState(0);\n  const { optionId } = useParams();\n\n  const textGenerator = (textArray: Array<String>) => {\n    return textArray.map((i) => <span className=\"text-spn\"> {i} </span>);\n  };\n\n  const dataIndex = _.findIndex(\n    globalStore.webData[globalStore.dataIndex].payload.excuses,\n    { excuseId: globalStore.optionsSelected[0] }\n  );\n\n  const currentData =\n    globalStore.webData[globalStore.dataIndex].payload.excuses[dataIndex];\n\n  const buttonGenerator = (\n    btnObject:\n      | Array<{\n          status: string | undefined;\n          text: string;\n        }>\n      | undefined\n  ) => {\n    return (\n      <div className=\"horizontal-btn\">\n        {btnObject?.map((i: { text: string; status: string | undefined }) => {\n          if (i.status === \"DISCARDED\") {\n            return (\n              <button\n                key={i.text}\n                className=\"btn-style btn-space\"\n                onClick={() => globalStore.shiftOptionsSelected()}\n              >\n                <span>{i.text}</span>\n              </button>\n            );\n          } else {\n            return (\n              <button\n                key={i.text}\n                className=\"btn-style btn-space\"\n                onClick={() => setIterator(iterator + 1)}\n              >\n                <span>{i.text}</span>\n              </button>\n            );\n          }\n        })}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"options-page\">\n      {console.log(\"Checl\", currentData, dataIndex)}\n      You chose : {currentData.text}\n      {textGenerator(currentData.explanations[iterator].texts)}\n      {buttonGenerator(currentData.explanations[iterator].possibleReplies)}\n    </div>\n  );\n};\n\nexport default OptionsPage;\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":2,"column":8,"nodeType":"80","messageId":"81","endLine":2,"endColumn":16},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"74","replacedBy":"82"},{"ruleId":"76","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"79","line":3,"column":8,"nodeType":"80","messageId":"81","endLine":3,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":9},{"ruleId":"86","severity":1,"message":"87","line":10,"column":27,"nodeType":"88","messageId":"89","endLine":10,"endColumn":52},{"ruleId":"84","severity":1,"message":"90","line":12,"column":11,"nodeType":"80","messageId":"81","endLine":12,"endColumn":17},{"ruleId":"78","severity":1,"message":"91","line":1,"column":32,"nodeType":"80","messageId":"81","endLine":1,"endColumn":42},{"ruleId":"78","severity":1,"message":"92","line":8,"column":19,"nodeType":"80","messageId":"81","endLine":8,"endColumn":29},{"ruleId":"93","severity":1,"message":"94","line":20,"column":6,"nodeType":"95","endLine":20,"endColumn":17,"suggestions":"96"},{"ruleId":"93","severity":1,"message":"97","line":24,"column":6,"nodeType":"95","endLine":24,"endColumn":17,"suggestions":"98"},{"ruleId":"84","severity":1,"message":"85","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":9},{"ruleId":"84","severity":1,"message":"99","line":13,"column":10,"nodeType":"80","messageId":"81","endLine":13,"endColumn":15},{"ruleId":"84","severity":1,"message":"100","line":13,"column":17,"nodeType":"80","messageId":"81","endLine":13,"endColumn":25},{"ruleId":"84","severity":1,"message":"101","line":4,"column":10,"nodeType":"80","messageId":"81","endLine":4,"endColumn":14},{"ruleId":"84","severity":1,"message":"102","line":11,"column":11,"nodeType":"80","messageId":"81","endLine":11,"endColumn":19},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'HomePage' is defined but never used.","Identifier","unusedVar",["103"],["104"],"@typescript-eslint/no-unused-vars","'_' is defined but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'pageId' is assigned a value but never used.","'useReducer' is defined but never used.","'setWebData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'webData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDataIndex' needs the current value of 'webData'.","ArrayExpression",["105"],"React Hook useEffect has a missing dependency: 'webData'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setDataType' needs the current value of 'webData'.",["106"],"'check' is assigned a value but never used.","'setCheck' is assigned a value but never used.","'Link' is defined but never used.","'optionId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [contentId, webData]",{"range":"111","text":"112"},"Update the dependencies array to be: [dataIndex, webData]",{"range":"113","text":"114"},[664,675],"[contentId, webData]",[752,763],"[dataIndex, webData]"]